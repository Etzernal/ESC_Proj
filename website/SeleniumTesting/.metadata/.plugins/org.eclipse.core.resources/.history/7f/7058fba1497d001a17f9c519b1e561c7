package seleniumtesting;

import java.net.MalformedURLException;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.Assert;
import org.testng.annotations.*;

public class PostForm {
	static WebDriver driver;
	boolean status = false;
	
	//Setting up capabilities to run our test script
    @Parameters(value= {"browser","version"})
    @BeforeClass
    public void setUp(String browser, String version) throws Exception {
        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability("browserName", browser);
        capabilities.setCapability("version", version);
        capabilities.setCapability("platform", "os"); // If this cap isn't specified, it will just get any available one
        capabilities.setCapability("build", "LambdaTestSampleApp");
        capabilities.setCapability("name", "LambdaTestJavaSample");
        capabilities.setCapability("network", true); // To enable network logs
        capabilities.setCapability("visual", true); // To enable step by step screenshot
        capabilities.setCapability("video", true); // To enable video recording
        capabilities.setCapability("console", true); // To capture console logs
        try {
            driver = new RemoteWebDriver(new URL("https://" + username + ":" + accesskey + gridURL), capabilities);
        } catch (MalformedURLException e) {
            System.out.println("Invalid grid URL");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }
	
	@BeforeClass
	public static void testSetUp() throws Exception {
		System.out.println("-----This is the beginning of our test-----");
		
		System.setProperty("webdriver.chrome.driver", "/Users/alicekham/seleniumWebDrivers/chromedriver");
	
		driver = new ChromeDriver();
		//maximize page
		driver.manage().window().maximize();
		//implicit wait for 10sec
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		//open URL of app
		driver.get("http://localhost:3001/FilterOneA");
		
	}
	
	@Test
	public void testverifyElementsOnPage() {
		System.out.println("-----Verifiying Elements On Page-----");
		WebElement fName = driver.findElement(By.id("firstName"));
		fName.isDisplayed();
		//last name
		WebElement lName = driver.findElement(By.id("lastName"));
		lName.isDisplayed();
		//email
		WebElement email = driver.findElement(By.id("email"));
		email.isDisplayed();
		//check box
		WebElement termsAndConditions = driver.findElement(By.id("gridCheck1"));
		termsAndConditions.isDisplayed();
		//submit button
		WebElement submitBtn = driver.findElement(By.id("submitbutton"));
		submitBtn.isDisplayed();
	}
	@Test
	public void testvalidFormFill() {
		System.out.println("-----Start form fill process - Valid Form Fill-----");
		//first name
		WebElement fName = driver.findElement(By.id("firstName"));
		fName.sendKeys("Vanessa");
		//last name
		WebElement lName = driver.findElement(By.id("lastName"));
		lName.sendKeys("Tan");
		//email
		WebElement email = driver.findElement(By.id("email"));
		email.sendKeys("vanessatan@gmail.com");
		//check box
		WebElement termsAndConditions = driver.findElement(By.id("gridCheck1"));
		termsAndConditions.click();
		//submit button
		WebElement submitBtn = driver.findElement(By.id("submitbutton"));
		submitBtn.click();
		
		String expectedURL = "http://localhost:3001/startchat";
		String actualURL = driver.getCurrentUrl();
		Assert.assertEquals(actualURL, expectedURL);
	}
	
	@Test
	public void testemptyName() {
		String currentURL = driver.getCurrentUrl();
		System.out.println("-----Form Fill - Empty Name Test-----");
		//first name
		WebElement fName = driver.findElement(By.id("firstName"));
		fName.sendKeys("");
		//last name
		WebElement lName = driver.findElement(By.id("lastName"));
		lName.sendKeys("");
		//email
		WebElement email = driver.findElement(By.id("email"));
		email.sendKeys("vanessatan@gmail.com");
		//check box
		WebElement termsAndConditions = driver.findElement(By.id("gridCheck1"));
		termsAndConditions.click();
		//submit button
		WebElement submitBtn = driver.findElement(By.id("submitbutton"));
		submitBtn.click();
		
		String actualURL = driver.getCurrentUrl();
		Assert.assertEquals(actualURL, currentURL);
	}
	
	@Test
	public void testemptyEmail() {
		System.out.println("-----Form Fill - Empty Email Test-----");
		//first name
		String currentURL = driver.getCurrentUrl();
		WebElement fName = driver.findElement(By.id("firstName"));
		fName.sendKeys("Vanessa");
		//last name
		WebElement lName = driver.findElement(By.id("lastName"));
		lName.sendKeys("Tan");
		//email
		WebElement email = driver.findElement(By.id("email"));
		email.sendKeys("");
		//check box
		WebElement termsAndConditions = driver.findElement(By.id("gridCheck1"));
		termsAndConditions.click();
		//submit button
		WebElement submitBtn = driver.findElement(By.id("submitbutton"));
		submitBtn.click();
		
		String actualURL = driver.getCurrentUrl();
		
		Assert.assertEquals(actualURL, currentURL);
	}
	
	@Test
	public void testunCheckedTermsAndConditions() {
		System.out.println("-----Form Fill - Terms And Conditions Not Agreed-----");
		//first name
		String currentURL = driver.getCurrentUrl();
		WebElement fName = driver.findElement(By.id("firstName"));
		fName.sendKeys("Vanessa");
		//last name
		WebElement lName = driver.findElement(By.id("lastName"));
		lName.sendKeys("Tan");
		//email
		WebElement email = driver.findElement(By.id("email"));
		email.sendKeys("");
		//check box
		//WebElement termsAndConditions = driver.findElement(By.id("gridCheck1"));
		//termsAndConditions.click();
		//submit button
		WebElement submitBtn = driver.findElement(By.id("submitbutton"));
		submitBtn.click();
		
		String actualURL = driver.getCurrentUrl();
		
		Assert.assertEquals(actualURL, currentURL);
	}
	
	@AfterClass
	public void testclose() throws Exception {
		if (driver!=null) {
			((JavascriptExecutor) driver).executeScript("form-status=", status);
			driver.quit();			
		}
	}
}
